[{"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/index.tsx":"1","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/reportWebVitals.ts":"2","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/App.tsx":"3","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/store/store.ts":"4","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/theme/customTheme.tsx":"5","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Header/Header.tsx":"6","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/ContentContainer.tsx":"7","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Footer/Footer.tsx":"8","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Navigation/slice/Slice.tsx":"9","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/data/Constants.tsx":"10","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Navigation/Navigation.tsx":"11","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/styles/StyleConstants.tsx":"12","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/SectionsRoot/SectionsRoot.tsx":"13","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/utils.tsx":"14","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/hooks/useNavigationSize.tsx":"15","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/About/About.tsx":"16","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Experience/Experience.tsx":"17","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Skills/Skills.tsx":"18","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/OnlineContent/OnlineContent.tsx":"19","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Education/Education.tsx":"20","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Projects/Projects.tsx":"21","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/styles/sectionStyles.tsx":"22","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Education/Edu.tsx":"23","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Skills/SkillList.tsx":"24","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Experience/Exp.tsx":"25","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/OnlineContent/OnlineLearning.tsx":"26","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Projects/Project.tsx":"27"},{"size":640,"mtime":1675661838068,"results":"28","hashOfConfig":"29"},{"size":428,"mtime":1675661838068,"results":"30","hashOfConfig":"29"},{"size":347,"mtime":1675661837989,"results":"31","hashOfConfig":"29"},{"size":284,"mtime":1675661838069,"results":"32","hashOfConfig":"29"},{"size":209,"mtime":1675661838069,"results":"33","hashOfConfig":"29"},{"size":838,"mtime":1675661838067,"results":"34","hashOfConfig":"29"},{"size":567,"mtime":1675661838066,"results":"35","hashOfConfig":"29"},{"size":2363,"mtime":1675661838067,"results":"36","hashOfConfig":"29"},{"size":553,"mtime":1675661838066,"results":"37","hashOfConfig":"29"},{"size":1523,"mtime":1675661838067,"results":"38","hashOfConfig":"29"},{"size":3276,"mtime":1675661838066,"results":"39","hashOfConfig":"29"},{"size":322,"mtime":1675661838069,"results":"40","hashOfConfig":"29"},{"size":917,"mtime":1675661838067,"results":"41","hashOfConfig":"29"},{"size":1432,"mtime":1675661838067,"results":"42","hashOfConfig":"29"},{"size":772,"mtime":1675661838068,"results":"43","hashOfConfig":"29"},{"size":1480,"mtime":1675661838066,"results":"44","hashOfConfig":"29"},{"size":1120,"mtime":1675661838066,"results":"45","hashOfConfig":"29"},{"size":781,"mtime":1675661838067,"results":"46","hashOfConfig":"29"},{"size":600,"mtime":1675661838067,"results":"47","hashOfConfig":"29"},{"size":640,"mtime":1675661838066,"results":"48","hashOfConfig":"29"},{"size":632,"mtime":1675661838067,"results":"49","hashOfConfig":"29"},{"size":1636,"mtime":1675661838069,"results":"50","hashOfConfig":"29"},{"size":1786,"mtime":1675661838066,"results":"51","hashOfConfig":"29"},{"size":1710,"mtime":1675661838067,"results":"52","hashOfConfig":"29"},{"size":2759,"mtime":1675661838066,"results":"53","hashOfConfig":"29"},{"size":1596,"mtime":1675661838067,"results":"54","hashOfConfig":"29"},{"size":2119,"mtime":1675661838067,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d02n2r",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/index.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/reportWebVitals.ts",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/App.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/store/store.ts",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/theme/customTheme.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Header/Header.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/ContentContainer.tsx",["150"],[],"\nimport { styled, Box, Grid } from '@mui/material';\nimport { NavigationList } from './Navigation/Navigation.tsx';\n\nimport { SectionsRoot } from './SectionsRoot/SectionsRoot.tsx';\n\nconst Wrapper = styled(Box)(({ theme }) => ({\n\twidth: \"85%\",\n\tmargin: \"0 auto\",\n\tdisplay: \"flex\",\n\tflex: 1,\n\tmarginTop: 84,\n\tflexDirection: \"column\",\n\tjustifyContent: \"flex-start\",\n\talignItems: \"center\",\n\t[theme.breakpoints.down(\"sm\")]: {\n\t\twidth: \"92%\"\n\t},\n}));\n\nexport const ContentContainer = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<NavigationList />\n\t\t\t<SectionsRoot />\n\t\t</Wrapper>\n\t);\n};","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Footer/Footer.tsx",["151","152"],[],"\nimport { styled, Box, Stack, Link, Divier } from '@mui/material';\nimport GithubIcon from '@mui/icons-material/GitHub';\nimport EmailIcon from '@mui/icons-material/Email';\nimport { StyleConstants } from '../../styles/StyleConstants.tsx';\nimport Contact from '../../data/Contact.json';\n\nconst FooterContainer = styled(Box)(({ theme }) => ({\n\twidth: \"100%\",\n\theight: 150,\n\tdisplay: \"flex\",\n\tflexDirection: \"column\",\n\talignItems: \"center\",\n\tjustifyContent: \"center\",\n\tbackgroundColor: StyleConstants.FOOTER,\n\tbottom: 0,\n\tzIndex: 1,\n\tfontWeight: 600,\n\t\"& .mail\": {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tpadding: 8,\n\t\tminWidth: 330,\n\t\t\"& svg\": {\n\t\t\tpaddingRight: 12,\n\t\t\tfontSize: 32,\n\t\t},\n\t},\n\t\"& .links\": {\n\t\tdisplay: \"flex\",\n\t\tpadding: 6,\n\t\twidth: 350,\n\t\tjustifyContent: \"space-between\",\n\t\t\"& svg\": {\n\t\t\tpaddingRight: 12,\n\t\t\tfontSize: 32,\n\t\t},\n\t},\n\t\"& .divider\": {\n\t\twidth: 100,\n\t\theight: 10,\n\t\tborderTop: '1px solid rgba(0,0,0,0.2)',\n\t},\n\t\"& .signature\": {\n\t\topacity: 0.8,\n\t\tfontSize: 12,\n\t\tpadding: \"0 0 5px\",\n\t\t\"& a\": {\n\t\t\ttextDecoration: \"none\",\n\t\t\tcolor: StyleConstants.BLACK_COLOR,\n\t\t\t\"&:hover\": {\n\t\t\t\tcolor: StyleConstants.HEADER,\n\t\t\t}\n\t\t},\n\t},\n\t\"& .actions\": {\n\t\tpadding: 5,\n\t\t\"& button\": {\n\t\t\tmarginRight: 6,\n\t\t},\n\t},\n\t\"& .contact-email\": {\n\t\tmarginLeft: \"10px\",\n\t\tcolor: \"darkblue\",\n\t},\n\t\"& .github-container\": {\n\t\tmargin: \"0 auto\",\n\t},\n\t\"& .git-icon\": {\n\t\ttransform: \"scale(1.1)\",\n\t\tposition: \"relative\",\n\t\ttop: \"8px\",\n\t\tleft: \"10px\",\n\t},\n\t[theme.breakpoints.down(\"sm\")]: {\n\t\tfontSize: 14,\n\t},\n}));\n\n\n\nexport const Footer = () => {\n\tconst { emailAddress='', github='' } = Contact;\n\n\treturn (\n\t\t<FooterContainer>\n\t\t\t<Box className=\"mail\">\n\t\t\t\t<EmailIcon /> <span>{emailAddress}</span>\n\t\t\t\t<div className=\"contact-email\" onClick={(e) => {window.location.href ='mailto:{emailAddress}';}}>Write an Email! </div>\n\t\t\t</Box>\n\t\t\t<Box className=\"links\">\n\t\t\t\t{github && (\n\t\t\t\t\t<div className=\"github-container\">\n\t\t\t\t\t\t<Link href={github} target=\"_blank\" style={{ color: StyleConstants.BLACK_COLOR }}>\n\t\t\t\t\t\t\t<span>Check out my GitHub here!</span><GithubIcon className=\"git-icon\"></GithubIcon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t\t<Box className=\"divider\" />\n\t\t\t<Box className=\"signature\">\n\t\t\t\t<span>Brian S. Online Portfolio, {(new Date().getFullYear())}, Designed with ReactJS</span>\n\t\t\t</Box>\n\t\t</FooterContainer>\n\t);\n};","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Navigation/slice/Slice.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/data/Constants.tsx",["153"],[],"import ProjectImg from \"../assets/project.jpeg\";\nimport ConnectFourProject from '../assets/project-images/connect4_proj.png';\nimport CompilersProject from '../assets/project-images/compiler.png';\nimport ColorPickerProject from '../assets/project-images/colorpicker.png';\n\nimport Ebikeskool from \"../assets/company-logos/eBikeSkool.png\";\n\nimport FPP from \"../assets/company-logos/fpp.png\";\nimport WYR from \"../assets/company-logos/wyrwear.png\";\nimport TDC from \"../assets/company-logos/tdc.png\";\nimport HFT from '../assets/company-logos/housefivetrading.png';\n\nimport selfIcon from '../assets/company-logos/self.png';\nimport fppLandingPage from '../assets/fpp_frontpage.png';\n\nimport uciLogo from '../assets/edu-logos/uciLogo.png';\nimport ivcLogo from '../assets/edu-logos/ivcLogo.jpeg';\n\ninterface Map {\n  [key: string]: string | undefined;\n}\n\n// google : Google\n// google - company name mentioned in Experience.json (lower cased)\n// Google - imported nam\nexport const logo: Map = {\n  fpp: FPP,\n  wyrwear: WYR,\n  tdc: TDC,\n  ebikeskool: Ebikeskool,\n  housefivetrading: HFT,\n  self: selfIcon,\n  fppLanding: fppLandingPage\n};\n\nexport const educationLogos: Map = {\n  uci: uciLogo,\n  ivc: ivcLogo\n};\n\nexport enum Constants {\n  NAME = \"Brian\",\n}\n\n// \"project name 1\": ProjectImg\n// \"project name 1\" - project name mentioned in Projects.json (lower cased)\n// ProjectImg - imported name \nexport const projectImage: Map = {\n  \"connectfour\": ConnectFourProject,\n  \"compiler\": CompilersProject,\n  \"colorpicker\": ColorPickerProject\n};","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Navigation/Navigation.tsx",["154","155","156"],[],"\nimport { Box, styled } from '@mui/material';\nimport { useState } from 'react'; \nimport { useSelector, useDispatch } from 'react-redux';\nimport { IRootState } from '../../../store/types.tsx';\nimport { setCurrentSection } from './slice/Slice.tsx';\nimport { sectionImages } from '../utils.tsx';\nimport { useNavigationSize } from '../../../hooks/useNavigationSize.tsx';\nimport { StyleConstants } from '../../../styles/StyleConstants.tsx';\nimport Arrow from '../../../assets/arrow.png';\n\nconst NavigationWrapper = styled(Box)(({ theme }) => ({\n\tdisplay: \"flex\",\n\tflexDirection: \"row\",\n\tjustifyContent: \"center\",\n\tbackgroundColor: StyleConstants.NAVIGATION_BG,\n\tpadding: \"0 20px\",\n\tborderRadius: 12,\n\tposition: \"sticky\",\n\tbackgroundColor: \"rgba(0,0,0,0.05)\",\n\twidth: \"100%\",\n\tzIndex: 1,\n\ttop: 84,\n\t\"& .nav-section\": {\n\t\tdisplay: \"flex\",\n\t\tpadding: 8,\n\t\tflexDirection: \"column\",\n\n\t\t\"&:hover\": {\n\t\t\ttransform: \"scale(1.1)\",\n\t\t},\n\t},\n\t\"& .section-name\": {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\twidth: 84, \n\t\tfontSize: 12,\n\t\tborderRadius: 10,\n\t},\n\t\"& .nav-item\": {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tborderStyle: \"solid\",\n\t\tborderColor: StyleConstants.SECTION_BORDER,\n\t\tborderRadius: \"50%\",\n\t\tborderWidth: 2,\n\n\t\t\"& img\": {\n\t\t\theight: 75, \n\t\t\twidth: 75,\n\t\t},\n\t},\n\t\"& .arrow\": {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tmargin: \"10px 0 0 0\",\n\t\theight: 65,\n\t\twidth: 72,\n\t\tpadding: 5,\n\t\tborderRadius: \"50%\",\n\t\ttransform: \"rotate(271deg)\",\n\n\t\t\"& img\": {\n\t\t\twidth: 58,\n\t\t\theight: 58,\n\t\t},\n\t},\n\t\"& .before\": {\n\t\ttransform: \"rotate(90deg)\",\n\t},\n\t\"& .active .nav-item\": {\n\t\tbackgroundColor: StyleConstants.ACTIVE_SECTION,\n\t},\n\t\"& .active .section-name\": {\n\t\tbackgroundColor: StyleConstants.ACTIVE_SECTION,\n\t},\n\t\"& .disabled\": {\n\t\topacity: \"0.2\",\n\t\tpointerEvents: \"none\"\n\t},\n\t[theme.breakpoints.down(\"md\")]: {\n\t\tjustifyContent: \"center\",\n\t\tpadding: 8,\n\n\t\t\"& .nav-section\": {\n\t\t\tpadding: \"0 3px\",\n\t\t},\n\t},\n}));\n\nexport const NavigationList = () => {\n\tconst dispatch = useDispatch();\n\tconst sections = useSelector((state: IRootState) => state.sections?.sections) || [];\n\n\tconst selectedSection = useSelector((state: IRootState) => state.sections?.currentSection) || '';\n\n\tconst filteredSections = sections.filter((section) => !section?.hide);\n\n\tconst [start, setStart] = useState(0);\n\tconst limit = useNavigationSize();\n\n\treturn (\n\t\t<NavigationWrapper>\n\t\t\t{limit && filteredSections.length && (\n\t\t\t\t<Box className={`arrow before ${start === 0 && 'disabled'}`}\n\t\t\t\t\tonClick={() => setStart((val) => val - 1)}>\n\t\t\t\t\t<img src={Arrow} />\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t\t{filteredSections.slice(start, start + limit).map((section) => (\n\t\t\t\t<Box key={section.key} className={`nav-section ${selectedSection === section.key && 'active'}`}>\n\t\t\t\t\t<Box className=\"nav-item\" onClick={() => dispatch(setCurrentSection(section.key))}>\n\t\t\t\t\t\t<img src={sectionImages[section.key]} alt={section.key} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<div className=\"section-name\">{section.name}</div>\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t\t{limit < filteredSections.length && (\n\t\t\t\t<Box className={`arrow after ${start === filteredSections.length - limit && 'disabled'}`}\n\t\t\t\t\tonClick={() => setStart((val) => val + 1)}>\n\t\t\t\t\t<img src={Arrow} />\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</NavigationWrapper>\n\t);\n};\n","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/styles/StyleConstants.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/SectionsRoot/SectionsRoot.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/utils.tsx",["157"],[],"\nimport Person from '../../assets/homeIcon.png';\nimport Education from '../../assets/education.png';\nimport Skills from '../../assets/skills.png';\nimport Experience from '../../assets/experience.png';\nimport Projects from '../../assets/idea.png';\nimport OnlineIcon from '../../assets/onlineIcon.png';\nimport Contact from '../../assets/contact.png';\n\nimport ExperienceContainer from './Experience/Experience.tsx';\nimport { About } from './About/About.tsx';\nimport { ProjectsContainer } from './Projects/Projects.tsx';\nimport { EducationContainer } from './Education/Education.tsx';\nimport { SkillsContainer } from './Skills/Skills.tsx';\nimport { OnlineContent} from './OnlineContent/OnlineContent.tsx';\n\ninterface SectionImages {\n\t[key: string]: string | undefined;\n}\n\ninterface SectionsInfo {\n\t[key: string]: any | undefined;\n}\n\nexport const sectionsInfo: SectionsInfo = {\n\tabout: { src: Person, component: <About /> },\n\texperience: { src: Experience, component: <ExperienceContainer /> },\n\tprojects: { src: Projects, component: <ProjectsContainer /> },\n\teducation: { src: Projects, component: <EducationContainer /> },\n\tskills: { src: Skills, component: <SkillsContainer /> },\n\tonlinecontent: {\n\t\tsrc: OnlineIcon,\n\t\tcomponent: <OnlineContent />\n\t},\n};\n\nexport const sectionImages: SectionImages = {\n\tabout: Person,\n\texperience: Experience,\n\tprojects: Projects,\n\teducation: Education,\n\tskills: Skills,\n\tonlinecontent: OnlineIcon,\n};","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/hooks/useNavigationSize.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/About/About.tsx",["158","159","160","161"],[],"import { styled, Box } from '@mui/material';\nimport MyImage from '../../../assets/profile/backyard-orange-upper.png';\nimport ExampleRes from '../../../assets/exampleres.pdf';\nimport Contact from '../../../data/Contact.json';\nimport EmailIcon from '@mui/icons-material/Email';\n\nimport {\n\tCustomButton,\n\tSectionWrapper,\n\tTitleWrapper,\n\tTitleHeader\n} from '../../../styles/sectionStyles.tsx';\n\nimport aboutInfo from '../../../data/About.json';\nimport { useEffect } from 'react';\n\nconst AboutContainer = styled(Box)(({ theme }) => ({\n\tdisplay: \"flex\",\n\talignSelf: \"center\",\n\t\"& img\": {\n\t\twidth: 400,\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\twidth: 350,\n\t\t},\n\t},\n\t[theme.breakpoints.down(\"md\")]: {\n\t\tflexDirection: \"column\",\n\t},\n}));\n\nconst DetailsWrapper = styled(Box)(({ theme }) => ({\n\tfontSize: 16,\n\tmarginLeft: 15,\n\t\"& .actions\": {\n\t\tmargin: \"12px 0\",\n\t},\n\t[theme.breakpoints.down(\"md\")]: {\n\t\tmargin: \"10px 0 0 0\",\n\t},\n}));\n\nexport const About = () => {\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, []);\n\n\tconst { emailAddress } = Contact;\n\n\treturn (\n\t\t<SectionWrapper>\n\t\t\t<TitleHeader>About Me</TitleHeader>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t<AboutContainer>\n\t\t\t\t<img src={MyImage} />\n\t\t\t\t<DetailsWrapper>\n\t\t\t\t\t<div>{aboutInfo.aboutMe}</div>\n\t\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t\t<CustomButton>\n\t\t\t\t\t\t\t<a href={\"mailto:\" + emailAddress} rel=\"noreferrer\" target=\"_blank\">Contact Me</a>\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</DetailsWrapper>\n\t\t\t</AboutContainer>\n\t\t</SectionWrapper>\n\t);\n};\n\n","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Experience/Experience.tsx",["162","163","164","165","166","167"],[],"\nimport { Box, styled } from '@mui/material';\nimport { SectionWrapper, TitleHeader } from '../../../styles/sectionStyles.tsx';\nimport Exp from './Exp.tsx';\nimport ExperienceList from '../../../data/Experience.json';\nimport { logo } from '../../../data/Constants.tsx';\n\nconst ExperienceWrapper = styled(Box)(() => ({}));\n\nconst CompanyLogos = styled(Box)(() => ({\n\t\"& img\": {\n\t\twidth: 145,\n\t\theight: 125,\n\t\tmargin: 10,\n\t\tborderRadius: 5,\n\t},\n\t\"& img:hover\": {\n\t\topacity: 0.8,\n\t}\n}));\n\nconst ExperienceContainer = () => {\n\treturn (\n\t\t<SectionWrapper>\n\t\t\t<TitleHeader>Experience</TitleHeader>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t<ExperienceWrapper>\n\t\t\t\t{ExperienceList.map((exp, ind) => (\n\t\t\t\t\t<Exp experience={exp} key={ind} />\n\t\t\t\t))}\n\t\t\t</ExperienceWrapper>\n\t\t\t<CompanyLogos>\n\t\t\t\t<h3>Some Sample Designs: </h3>\n\t\t\t\t<a href=\"https://thedirtycookieoc.com\" target=\"_blank\"><img src={logo.tdc} /></a>\n\t\t\t\t<a href=\"https://wyrwear.com\" target=\"_blank\"><img src={logo.wyrwear} /></a>\n\t\t\t\t<a href={logo.fppLanding} target=\"_blank\"><img src={logo.fpp} /></a>\n\t\t\t</CompanyLogos>\n\t\t</SectionWrapper>\n\t);\n};\n\nexport default ExperienceContainer;","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Skills/Skills.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/OnlineContent/OnlineContent.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Education/Education.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Projects/Projects.tsx",["168","169"],[],"\nimport { useEffect } from 'react';\nimport { Box, styled } from '@mui/material';\nimport { TitleWrapper, SectionWrapper, TitleHeader } from '../../../styles/sectionStyles.tsx';\nimport { Project } from './Project.tsx';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport projects from '../../../data/Projects.json';\n\nexport const ProjectsContainer = () => {\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, []);\n\n\treturn (\n\t\t<SectionWrapper>\n\t\t\t<TitleHeader>Projects</TitleHeader>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t<Box>\n\t\t\t\t{projects.map((project, ind) => (\n\t\t\t\t\t<Project project={project} key={uuidv4()} />\n\t\t\t\t))}\n\t\t\t</Box>\n\t\t</SectionWrapper>\n\t);\n};","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/styles/sectionStyles.tsx",[],[],"/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Education/Edu.tsx",["170","171"],[],"\nimport { clsx } from 'clsx';\nimport { Box, styled } from '@mui/material';\nimport { StyleConstants } from '../../../styles/StyleConstants.tsx';\nimport { educationLogos } from '../../../data/Constants.tsx';\n\ninterface Edu {\n\tname?: string;\n\tcourse?: string;\n\tlocation?: string;\n\tspan?: string;\n\tspecialization?: string;\n\tscore?: string;\n}\n\ninterface Prop {\n\teducation: Edu;\n\tind: number;\n}\n\nconst EduWrapper = styled(Box)(( { theme }) => ({\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tjustifyContent: \"space-between\",\n\tpadding: 20,\n\t\"& .eduLogo\": {\n\t\twidth: 130,\n\t\theight: 130\n\t},\n\t\"&.reverse\": {\n\t\tflexDirection: \"row-reverse\",\n\t},\n\t\"& .span\": {\n\t\theight: 100,\n\t\twidth: 100,\n\t\tborderWidth: 1,\n\t\tborderColor: StyleConstants.BLACK,\n\t\tbackground: StyleConstants.EDUCATION_BG,\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tfontWeight: 600,\n\t\tborderRadius: \"50%\"\n\t},\n\t\"& .connector\": {\n\t\tbackground: \"black\",\n\t\theight: 1,\n\t\tflexGrow: 1,\n\t},\n\t\"& .description\": {\n\t\tborder: \"1px solid black\",\n\t\tbackground: StyleConstants.EDUCATION_BG,\n\t\tpadding: 15,\n\t\twidth: 450,\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tflexDirection: \"column\",\n\t\t\tpadding: 0,\n\t\t\t\"&.reverse\": {\n\t\t\t\tflexDriection: \"column\",\n\t\t\t}\n\t\t},\n\t},\n}));\n\nexport const Edu = ({ education, ind }: Prop) => {\n\treturn (\n\t\t<EduWrapper className={clsx({ reverse: ind % 2 !== 0})}>\n\t\t\t<div className=\"span\">{education.span}</div>\n\t\t\t<img className=\"eduLogo\" src={educationLogos[education.abbrev]} />\n\t\t\t<div className=\"connector\"></div>\n\t\t\t<div className=\"description\">\n\t\t\t\t<div>{education.name}</div>\n\t\t\t\t<div>{education.location}</div>\n\t\t\t\t<div>\n\t\t\t\t\t{education.course}\n\t\t\t\t\t{education.specialization && ` - ${education.specialization}`}\n\t\t\t\t</div>\n\t\t\t\t<div>{education.score}</div>\n\t\t\t</div>\n\t\t</EduWrapper>\n\t);\n};\n\n\n","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Skills/SkillList.tsx",["172"],[],"\nimport { Box, styled } from '@mui/material';\nimport SoftSkill from '../../../assets/frontendSkills.png';\nimport HardSkill from '../../../assets/hardSkills.png';\nimport { StyleConstants } from '../../../styles/StyleConstants.tsx';\n\ninterface Prop {\n\tskills: string[];\n\ttype: string;\n}\n\nconst SkillListWrapper = styled(Box)(() => ({\n\tdisplay: \"flex\",\n\tposition: \"relative\",\n\tjustifyContent: \"center\",\n\talignItems: \"center\",\n\tflexDirection: \"column\",\n\t\"& .skillType\":  {\n\t\twidth: \"80%\",\n\t\ttextAlign: \"center\",\n\t\tborder: \"1px solid black\",\n\t\tbackground: StyleConstants.SKILLS_BG,\n\t},\n\t\"& .skillIcon\": {\n\t\theight: 75,\n\t\twidth: 75,\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tborder: \"1px solid black\",\n\t\tborderRadius: \"50%\",\n\t\tposition: \"absolute\",\n\t\tbackground: StyleConstants.SKILLS_BG,\n\t\ttop: 23,\n\t\t\"& img\": {\n\t\t\theight: 58,\n\t\t\twidth: 58,\n\t\t},\n\t},\n\t\"& .skill-icon-image\": {\n\t\tborderRadius: \"8px\",\n\t\ttransform: \"scale(0.95)\",\n\t},\n\t\"& .skillsList\": {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tjustifyContent: StyleConstants.SKILLS_BG,\n\t\twidth: 250,\n\t\theight: 250,\n\t\tmarginTop: 78,\n\t\tborder: \"1px solid black\",\n\t\tbackground: \"#bcd1e3\",\n\t\tpadding: 25,\n\t\t\"& div\": {\n\t\t\tpadding: 5,\n\t\t},\n\t},\n}));\n\nexport const SkillList = ({ type, skills }: Prop) => {\n\treturn (\n\t\t<SkillListWrapper>\n\t\t\t<Box className=\"skillType bold\">{`${type === 'frontendSkills' ? 'Frontend' : 'Backend'} Skills`}</Box>\n\t\t\t<Box className=\"skillIcon\">\n\t\t\t\t<img className=\"skill-icon-image\" src={type === 'frontendSkills' ? SoftSkill : HardSkill} />\n\t\t\t</Box>\n\t\t\t<Box className=\"skillsList\">\n\t\t\t\t{skills.map((skill, ind) => (\n\t\t\t\t\t<div key={ind}>{`• ${skill}`}</div>\n\t\t\t\t))}\n\t\t\t</Box>\n\t\t</SkillListWrapper>\n\t);\n};","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Experience/Exp.tsx",["173","174","175","176"],[],"\nimport { Key, useEffect } from 'react';\nimport { Box, styled, Link } from '@mui/material';\nimport GithubIcon from '@mui/icons-material/GitHub';\n\nimport { logo } from '../../../data/Constants.tsx';\nimport { StyleConstants } from '../../../styles/StyleConstants.tsx';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface IExperience {\n\tspan?: string;\n\tcompany?: string;\n\tlocation?: string;\n\tgithub?: string;\n\tprogress?: any;\n}\n\ninterface Prop {\n\texperience: IExperience;\n}\n\nconst Wrapper = styled(Box)(({ theme }) => ({\n\tdisplay: \"flex\",\n\talignItems: \"center\",\n\tmarginBottom: StyleConstants.SPACE_BETWEEN_SECTIONS,\n\t\"& .span\": {\n\t\tpadding: \"0 0 6px\",\n\t},\n\t\"&. description-wrapper\": {\n\t\tpaddingBottom: 10,\n\t},\n\t\"& .description\": {\n\t\tpadding: \"0 0 6px 12px\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\t\"& .bullet\": {\n\t\t\theight: 10,\n\t\t\tminWidth: 10,\n\t\t\tbackgroundColor: \"black\",\n\t\t\tborderRadius: \"50%\",\n\t\t\tmarginRight: 10,\n\t\t},\n\t},\n\t[theme.breakpoints.down(\"md\")]: {\n\t\tflexDirection: \"column\",\n\t\talignItems: \"flex-start\",\n\t},\n}));\n\nconst CompanyWrapper = styled(Box)(({ theme }) => ({\n\tdisplay: \"flex\",\n\tpadding: 20,\n\t\"& .logo\": {\n\t\tmarginRight: 10,\n\t\t\"& img\": {\n\t\t\theight: 110,\n\t\t\twidth: 110,\n\t\t},\n\t},\n\t\"& .employment-info\": {\n\t\tfontSize: StyleConstants.SIZE_ITEM_TITLE,\n\t\twidth: 250,\n\t\tmarginRight: 10,\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t},\n\t[theme.breakpoints.down(\"md\")]: {\n\t\t\"& .employment-info\": {\n\t\t\talignItems: \"flex-start\",\n\t\t},\n\t},\n}));\n\nconst DescriptionWrapper = styled(Box)(({ theme }) => ({\n\twidth: 450,\n\t[theme.breakpoints.down(\"md\")]: {\n\t\tpaddingTop: 12,\n\t},\n\t[theme.breakpoints.down(\"sm\")]: {\n\t\twidth: 370,\n\t},\n}));\n\nconst Experience = ({ experience }: Prop) => {\n\tconst {\n\t\tcompany = \"\",\n\t\tspan, \n\t\tlocation,\n\t\tposition = \"\",\n\t\tprogress = [],\n\t\ttag,\n\t} = experience;\n\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, []);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<CompanyWrapper>\n\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t<img src={logo[tag]} alt=\"logo\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"employment-info\">\n\t\t\t\t\t<div className=\"name bold\">{company}</div>\n\t\t\t\t\t<div>{location?.location}</div>\n\t\t\t\t</div>\n\t\t\t</CompanyWrapper>\n\t\t\t<DescriptionWrapper>\n\t\t\t\t{progress.map((prog: any) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"descriptionContainer\" key={uuidv4()}>\n\t\t\t\t\t\t\t<div className=\"role bold\">{prog.role}</div>\n\t\t\t\t\t\t\t<div className=\"span\">{prog.span}</div>\n\t\t\t\t\t\t\t<div className=\"description-wrapper\">\n\t\t\t\t\t\t\t\t{prog.descriptions.map((desc: string, ind: Key) => (\n\t\t\t\t\t\t\t\t\t<div className=\"description\" key={ind}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"bullet\" />\n\t\t\t\t\t\t\t\t\t\t{desc}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</DescriptionWrapper>\n\t\t</Wrapper>\n\t);\n};\n\nexport default Experience;\n\n\n","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/OnlineContent/OnlineLearning.tsx",["177"],[],"\nimport { Box, styled, Button } from '@mui/material';\nimport { CustomButton } from '../../../styles/sectionStyles.tsx';\nimport { StyleConstants } from '../../../styles/StyleConstants.tsx';\n\nconst OnlineProfileWrapper = styled(Box)(({ theme }) => ({\n\tdisplay: \"flex\",\n\tjustifyContent: \"space-between\",\n\tmarginBottom: StyleConstants.SPACE_BETWEEN_SECTIONS,\n\t[theme.breakpoints.down(\"md\")]: {\n\t\tflexDirection: \"column\",\n\t},\n}));\n\nconst InfoWrapper = styled(Box)(() => ({\n\tpaddingRight: 15,\n\tlineHeight: 1.53,\n\t\"& .name\": {\n\t\tmarginBottom: 15,\n\t\tfontSize: StyleConstants.SIZE_ITEM_TITLE,\n\t},\n\t\" &.actions\": {\n\t\tmargin: \"12px 0\",\n\t},\n}));\n\nconst ImageBox = styled(Box)(({ theme }) => ({\n\tmarginRight: 10,\n\twidth: 400,\n\tminHeight: 250,\n\tborder: \"1px solid black\",\n\t\"& img\": {\n\t\twidth: 400,\n\t},\n\t[theme.breakpoints.down(\"sm\")]: {\n\t\twidth: 350,\n\t\t\"& img\": {\n\t\t\twidth: 350\n\t\t},\n\t},\n}));\n\ninterface profile {\n\tname?: string;\n\torg?: string;\n\torgUrl?: string;\n\turl?: string;\n}\n\ninterface Prop {\n\tprofile: profile;\n}\n\nexport const OnlineLearning = ({ profile }: Prop) => {\n\tconst {\n\t\tname = \"\",\n\t\torgUrl = \"\",\n\t\turlImage = \"\",\n\t\tdescription = \"\",\n\t} = profile;\n\n\treturn (\n\t\t<OnlineProfileWrapper>\n\t\t\t<InfoWrapper>\n\t\t\t\t<div className=\"name bold\">{name}</div>\n\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t<CustomButton>\n\t\t\t\t\t\t<a href={orgUrl} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\tMy Activity\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<b>Description: </b> {description}\n\t\t\t\t</div>\n\t\t\t</InfoWrapper>\n\t\t\t<ImageBox>\n\t\t\t\t<img src={urlImage} alt=\"profile\" />\n\t\t\t</ImageBox>\n\t\t</OnlineProfileWrapper>\n\t);\n};\n","/Users/brianslaughter/Desktop/coding/projects/portfolio-site/slaughterb.github.io/src/components/Content/Projects/Project.tsx",["178"],[],"\nimport { Box, styled } from '@mui/material';\nimport ProjectImg from '../../../assets/project.jpeg';\nimport { projectImage } from '../../../data/Constants.tsx';\nimport { StyleConstants } from '../../../styles/StyleConstants.tsx';\nimport { CustomButton } from '../../../styles/sectionStyles.tsx';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface project {\n\tname?: string;\n\tdescription?: string;\n\tsourceCode?: string;\n\tdemoLink?: string;\n\ttag: string;\n\ttechnologies: string;\n}\n\ninterface Prop {\n\tproject: project;\n}\n\nconst InfoWrapper = styled(Box)(() => ({\n\t\"& .name\": {\n\t\tfontSize: StyleConstants.SIZE_ITEM_TITLE,\n\t},\n\t\"& .desc\": {\n\t\tpadding: 10,\n\t},\n\t\"& .actions button\": {\n\t\tmargin: \"0 12px 12px 0\",\n\t},\n}));\n\nconst ProjectWrapper = styled(Box)(({ theme }) => ({\n\tdisplay: \"flex\",\n\tjustifyContent: \"space-between\",\n\tmarginBottom: StyleConstants.SPACE_BETWEEN_SECTIONS,\n\t[theme.breakpoints.down(\"md\")]: {\n\t\tflexDirection: \"column\",\n\t},\n\tborderTop: \"1px solid black\",\n\tborderBottom: \"1px solid black\",\n}));\n\nconst ImageBox = styled(Box)(({ theme }) => ({\n\tmarginRight: 10,\n\twidth: 400,\n\t\"& img\": {\n\t\tborder: \"1px solid black\",\n\t\twidth: 400,\n\t},\n\t[theme.breakpoints.down(\"sm\")]: {\n\t\twidth: 350,\n\t\t\"& img\": {\n\t\t\twidth: 350,\n\t\t},\n\t},\n}));\n\nexport const Project = ({ project }: Prop) => {\n\tconst {\n\t\tname = \"\",\n\t\tdescription = \"\",\n\t\tsourceCode = \"\",\n\t\tdemoLink = \"\",\n\t\ttag = \"\",\n\t\ttechnologies = [],\n\t} = project;\n\n\treturn (\n\t\t<ProjectWrapper>\n\t\t\t<InfoWrapper>\n\t\t\t\t<div className=\"name bold\">{name}</div>\n\t\t\t\t<div className=\"desc\">{description}</div>\n\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t<CustomButton>\n\t\t\t\t\t\t<a href={sourceCode} target=\"_blank\" rel=\"noreferrer\"> View Source Code </a>\n\t\t\t\t\t</CustomButton>\n\t\t\t\t\t{demoLink && (\n\t\t\t\t\t\t<CustomButton>\n\t\t\t\t\t\t\t<a href={demoLink} target=\"_blank\" rel=\"noreferrer\">Demo</a>\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div>Technologies used: </div>\n\t\t\t\t{technologies.map((tech, i) => (\n\t\t\t\t\t<span key={uuidv4()}>| {tech} |</span>\n\t\t\t\t))}\n\t\t\t</InfoWrapper>\n\t\t\t<ImageBox>\n\t\t\t\t<img src={projectImage[tag] || ProjectImg} alt=\"project image\" />\n\t\t\t</ImageBox>\n\t\t</ProjectWrapper>\n\t);\n};\n\n",{"ruleId":"179","severity":1,"message":"180","line":2,"column":23,"nodeType":"181","messageId":"182","endLine":2,"endColumn":27},{"ruleId":"179","severity":1,"message":"183","line":2,"column":23,"nodeType":"181","messageId":"182","endLine":2,"endColumn":28},{"ruleId":"179","severity":1,"message":"184","line":2,"column":36,"nodeType":"181","messageId":"182","endLine":2,"endColumn":42},{"ruleId":"179","severity":1,"message":"185","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":20,"column":2,"nodeType":"188","messageId":"189","endLine":20,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":109,"column":6,"nodeType":"192","endLine":109,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":123,"column":6,"nodeType":"192","endLine":123,"endColumn":25},{"ruleId":"179","severity":1,"message":"193","line":8,"column":8,"nodeType":"181","messageId":"182","endLine":8,"endColumn":15},{"ruleId":"179","severity":1,"message":"194","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":18},{"ruleId":"179","severity":1,"message":"195","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":17},{"ruleId":"179","severity":1,"message":"196","line":10,"column":2,"nodeType":"181","messageId":"182","endLine":10,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":55,"column":5,"nodeType":"192","endLine":55,"endColumn":26},{"ruleId":"197","severity":1,"message":"198","line":35,"column":5,"nodeType":"192","messageId":"199","endLine":35,"endColumn":60,"fix":"200"},{"ruleId":"190","severity":1,"message":"191","line":35,"column":60,"nodeType":"192","endLine":35,"endColumn":82},{"ruleId":"197","severity":1,"message":"198","line":36,"column":5,"nodeType":"192","messageId":"199","endLine":36,"endColumn":51,"fix":"201"},{"ruleId":"190","severity":1,"message":"191","line":36,"column":51,"nodeType":"192","endLine":36,"endColumn":77},{"ruleId":"197","severity":1,"message":"198","line":37,"column":5,"nodeType":"192","messageId":"199","endLine":37,"endColumn":47,"fix":"202"},{"ruleId":"190","severity":1,"message":"191","line":37,"column":47,"nodeType":"192","endLine":37,"endColumn":69},{"ruleId":"179","severity":1,"message":"203","line":3,"column":15,"nodeType":"181","messageId":"182","endLine":3,"endColumn":21},{"ruleId":"179","severity":1,"message":"196","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":22},{"ruleId":"204","severity":1,"message":"205","line":65,"column":14,"nodeType":"181","messageId":"206","endLine":65,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":69,"column":4,"nodeType":"192","endLine":69,"endColumn":70},{"ruleId":"190","severity":1,"message":"191","line":65,"column":5,"nodeType":"192","endLine":65,"endColumn":97},{"ruleId":"179","severity":1,"message":"207","line":3,"column":23,"nodeType":"181","messageId":"182","endLine":3,"endColumn":27},{"ruleId":"179","severity":1,"message":"208","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"209","line":89,"column":3,"nodeType":"181","messageId":"182","endLine":89,"endColumn":7},{"ruleId":"179","severity":1,"message":"210","line":91,"column":3,"nodeType":"181","messageId":"182","endLine":91,"endColumn":11},{"ruleId":"179","severity":1,"message":"211","line":2,"column":23,"nodeType":"181","messageId":"182","endLine":2,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":91,"column":5,"nodeType":"192","endLine":91,"endColumn":70},"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Stack' is defined but never used.","'Divier' is defined but never used.","'ProjectImg' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Contact' is defined but never used.","'ExampleRes' is defined but never used.","'EmailIcon' is defined but never used.","'TitleWrapper' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"214","text":"215"},{"range":"216","text":"215"},{"range":"217","text":"215"},"'styled' is defined but never used.","@typescript-eslint/no-redeclare","'Edu' is already defined.","redeclared","'Link' is defined but never used.","'GithubIcon' is defined but never used.","'span' is assigned a value but never used.","'position' is assigned a value but never used.","'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",[856,856]," rel=\"noreferrer\"",[933,933],[1010,1010]]